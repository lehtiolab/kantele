# Generated by Django 4.2.13 on 2025-01-09 13:53

from django.db import migrations, models
from django.db.models import F

from dashboard import models as dm


dtmap = {
        'psms': dm.LineDataTypes.NRPSMS,
        'scans': dm.LineDataTypes.NRSCANS,
        'peptides': dm.LineDataTypes.NRPEPTIDES,
        'unique_peptides': dm.LineDataTypes.NRPEPTIDES_UNI,
        'proteins': dm.LineDataTypes.NRPROTEINS,
        'miscleav1': dm.LineDataTypes.MISCLEAV1,
        'miscleav2': dm.LineDataTypes.MISCLEAV2,
        'peaks_fwhm': dm.LineDataTypes.PEAKS_FWHM,

        'perror': dm.QuartileDataTypes.MASSERROR,
        'msgfscore': dm.QuartileDataTypes.SCORE,
        'rt': dm.QuartileDataTypes.RT,
        'peparea': dm.QuartileDataTypes.PEPMS1AREA,
        'ionmob': dm.QuartileDataTypes.IONMOB,
        'fwhms': dm.QuartileDataTypes.FWHM,
        'ioninj': dm.QuartileDataTypes.IONINJ,
        'matched_peaks': dm.QuartileDataTypes.MATCHED_PEAKS,
        }


def fill_datatypes_remove_old(a, s):
    Box = a.get_model('dashboard', 'BoxplotData')
    Box.objects.filter(shortname='sagescores').delete()
    for b in Box.objects.all():
        b.datatype = dtmap[b.shortname]
        b.save()
    Line = a.get_model('dashboard', 'LineplotData')
    Line.objects.filter(shortname='miscleav3').delete()
    Line.objects.filter(shortname='miscleav0').delete()
    for l in Line.objects.all():
        l.datatype = dtmap[l.shortname]
        l.save()
    # Remove thermo ion mob plots
    Box.objects.filter(datatype=dm.QuartileDataTypes.IONMOB, q2=F('q3'), q1=0.0).delete()

def fake(a,s):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0002_qcdata_is_ok_qcdata_message'),
    ]

    operations = [
        migrations.AddField(
            model_name='boxplotdata',
            name='datatype',
            field=models.IntegerField(choices=[(1, 'FWHM'), (2, 'Peptide MS1 area'), (3, 'Mass error'), (4, 'Retention time'), (5, 'Score'), (6, 'Ion mobility'), (7, 'Ion injection time(ms)'), (8, 'Amount MS2 peaks matched')]),
            preserve_default=False,
        ),

        migrations.AddField(
            model_name='lineplotdata',
            name='datatype',
            field=models.IntegerField(choices=[(1, 'Nr of proteins'), (2, 'Nr of peptides'), (3, 'Nr of peptides mapping uniquely'), (4, 'Nr of PSMs'), (5, 'Nr of scans'), (6, 'Nr of PSMs with 1 missed cleavage'), (7, 'Nr of PSMs with 2 missed cleavage'), (8, 'Amount scans FWHM')]),
            preserve_default=False,
        ),

        migrations.AddField(
            model_name='qcdata',
            name='runtype',
            field=models.IntegerField(choices=[(1, 'DDA'), (2, 'DIA')], default=1),
            preserve_default=False,
        ),

        migrations.RunPython(fill_datatypes_remove_old, fake),

        migrations.AlterField(
            model_name='qcdata',
            name='analysis',
            field=models.OneToOneField(on_delete=models.deletion.CASCADE, to='analysis.analysis'),
        ),
        migrations.AlterField(
            model_name='qcdata',
            name='rawfile',
            field=models.OneToOneField(on_delete=models.deletion.CASCADE, to='rawstatus.rawfile'),
        ),

        migrations.RenameModel(
            old_name='QCData',
            new_name='QCRun',
        ),

    ]
