services:
    web:
        depends_on:
            - db
            - mq
            - analysis1
            - analysis_ssh_1
            - analysis_storage_1
            - storage_queue_1
            - storage_fastqueue_1
            - analysis2
            - analysis_storage_2
            - analysis_fastqueue_2
            - storage_ssh_1
            - analysis_ssh_2
            - storage_downloads
            - storage_web_rsync
            - tulos_ingester
            - upload_bay_rsync
        extends:
            file: docker-compose-base.yml
            service: web
        image: django_test
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: django_test
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        env_file:
            - testing.env
        volumes:
            - type: bind
              source: ../backend
              target: /kantele
            - type: bind
              source: ../../data/test
              target: /fixtures
            - type: bind 
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: '0.0.0.0:80'
            SECRET_KEY: test_secret
            HOST_DOMAIN: 'web'
            TESTING: 1
            PROTOCOL: http
            DB_HOST: db
            RABBITHOST: mq
            TMPSHARE: /storage/tmp
            SERVABLE_FILE_PATH: /storage/web
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
            TMP_UPLOADPATH: /storage/uploads
            HOST_UPLOADDIR: /storage/uploads
    
    db: 
        image: postgres:14.3
        #user: "${DBUID:-0}:${DBGID:-0}"
        environment:
            POSTGRES_PASSWORD: "${PG_SUPERUSER_PASSWORD}"
            KANTELE_PASSWORD: "${PG_KANTELE_PASSWORD}"
            KANTELE_DB: "${KANTELE_DB_NAME}"
            KANTELE_ROLE: "${PG_KANTELE_USER}"
        volumes:
            - "./create_kantele_db.sh:/docker-entrypoint-initdb.d/create_kantele_db.sh"

    mq:
        extends:
            file: docker-compose-base.yml
            service: mq

    # Storage controller actual SSH port lives in different container,
    # storage_ssh_1 since we need CMD service ssh start -D for that
    # this container and that one together represent the storage controller.
    # Same goes for controller 2
    storage_queue_1:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q storage1__rsyncstorage -n storage_mv.%h --concurrency=1
        volumes:
            # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    storage_fastqueue_1:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q storage1__fastfnop -n storage_mv.%h --concurrency=1
        volumes:
            # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'


    storage_ssh_1:
        image: rsync_stor
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: rsync_storage
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        volumes:
            - ./test_rsync_sshkey.pub:/home/kantele/.ssh/authorized_keys
            - type: bind
              source: ../../data/teststorage
              target: /storage

    analysis2:
        image: nextflow
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: nextflow
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        command: celery -A kantele worker -Q analysis2__nextflow -n analysis.%h --concurrency=1
        env_file:
            - testing.env
        volumes:
            - type: bind
              source: ../backend
              target: /kantele
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            PROTOCOL: http
            RABBITHOST: mq
            RABBIT_VHOST: "${RABBIT_VHOST}"
            RABBITUSER: "${RABBITUSER:-guest}"
            RABBITPASS: "${RABBITPASS:-guest}"
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
            NXF_COMMAND: 'python3'
            NEXTFLOW_RUNDIR: '/storage/nf_runs2'
            APIKEY: "${APIKEY_ANALYSIS}"

    analysis_storage_2:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q analysis2__rsyncstorage -n storage_mv.%h --concurrency=1
        volumes:
            # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    analysis_fastqueue_2:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q analysis2__fastfnop -n storage_mv.%h --concurrency=1
        volumes:
            # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'


    analysis_ssh_2:
        image: rsync_stor
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: rsync_storage
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        volumes:
            - ./test_rsync_sshkey.pub:/home/kantele/.ssh/authorized_keys
            - type: bind
              source: ../../data/teststorage
              target: /storage

    tulos_ingester:
      env_file:
        - testing.env
      extends:
        file: ./docker-compose-dev.yml
        service: storage
      volumes:
          # Overwrite dev storage here
          - type: bind
            source: ../../data/teststorage
            target: /storage
      command: celery -A kantele worker -Q scaninbox -n storage_downloads.%h --concurrency=1
      environment:
          KANTELEHOST: web
          TMPSHARE: '/storage/tmp'
          ANALYSISSHARE: '/storage/analysis'
          STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    storage_web_rsync:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q web_rsync -n web_rsync.%h --concurrency=1
        volumes:
          # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
            RSYNC_SSHPORT: "${RSYNC_SSHPORT}"
            HOST_UPLOADDIR: /storage/uploads

    storage_downloads:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q file_download -n storage_downloads.%h --concurrency=1
        volumes:
          # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
            RSYNC_SSHPORT: "${RSYNC_SSHPORT}"
            HOST_UPLOADDIR: /storage/uploads

    analysis1:
        image: nextflow
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: nextflow
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        command: celery -A kantele worker -Q analysis1__nextflow -n analysis.%h --concurrency=1
        env_file:
            - testing.env
        volumes:
            - type: bind
              source: ../backend
              target: /kantele
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            PROTOCOL: http
            RABBITHOST: mq
            RABBIT_VHOST: "${RABBIT_VHOST}"
            RABBITUSER: "${RABBITUSER:-guest}"
            RABBITPASS: "${RABBITPASS:-guest}"
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
            NXF_COMMAND: 'python3'
            NEXTFLOW_RUNDIR: '/storage/nf_runs'
            APIKEY: "${APIKEY_ANALYSIS}"

    analysis_ssh_1:
        image: rsync_stor
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: rsync_storage
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        volumes:
            - ./test_rsync_sshkey.pub:/home/kantele/.ssh/authorized_keys
            - type: bind
              source: ../../data/teststorage
              target: /storage

    analysis_storage_1:
        extends:
            file: ./docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q analysis1__rsyncstorage -n storage_mv.%h --concurrency=1
        volumes:
            # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'



    upload_bay_rsync:
        image: rsync_stor
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: rsync_storage
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        volumes:
            - ./test_rsync_sshkey.pub:/home/kantele/.ssh/authorized_keys
            - type: bind
              source: ../../data/teststorage
              target: /storage
